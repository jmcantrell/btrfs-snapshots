#!/usr/bin/env bash

set -euo pipefail
shopt -s nullglob

self_name=${0##*/}

export LIB_DIR=${BTRFS_SNAPSHOTS_LIB_DIR:-/usr/local/lib/$self_name}
export CONFIG_DIR=${BTRFS_SNAPSHOTS_CONFIG_DIR:-/usr/local/etc/$self_name}

usage="Manage timestamped collections of btrfs snapshots.

Usage:
    $self_name -h|--help
    $self_name -v|--version
    $self_name profiles
    $self_name list|create|prune [PROFILE...]

Actions:
    profiles    print profile names to stdout
    list        print snapshot paths to stdout
    create      create a new snapshot in the configured location
    prune       delete snapshots that fall outside of defined limits

Arguments:
    PROFILE     profile name to perform action on (default: all)

Environment:
    ${self_name^^}_CONFIG_DIR[=${CONFIG_DIR@Q}]

See also:
    $self_name(5)
    $self_name(8)
"

version="0.10.0"

if (($# > 0)); then
    if [[ $1 == -h || $1 == --help ]]; then
        printf "%s\n" "$usage"
        exit
    elif [[ $1 == -v || $1 == --version ]]; then
        printf "%s\n" "$version"
        exit
    fi
fi

. "$LIB_DIR"/init.bash

action_name=${1:?missing action}
shift

if [[ ! $action_name =~ ^(profiles|list|create|prune)$ ]]; then
    printf "%s: invalid action: %s\n" "$0" "$action_name" >&2
    exit 1
fi

export PROFILES_DIR=$CONFIG_DIR/profile.d
export DEFAULTS_FILE=$CONFIG_DIR/defaults.conf

if [[ $action_name == profiles ]]; then
    do_profiles
    exit
fi

profile_names=()
declare -A profile_files=()

for profile_file in "$PROFILES_DIR"/*.conf; do
    profile_name=${profile_file##*/}
    profile_name=${profile_name%.conf}
    profile_names+=("$profile_name")
    profile_files[$profile_name]=$profile_file
done

declare -A profiles_selected=()

for profile_name in "$@"; do
    if [[ ! -v profile_files[$profile_name] ]]; then
        printf "%s: profile does not exist: %q\n" "$0" "$profile_name" >&2
        exit 2
    fi

    profiles_selected[$profile_name]=1
done

if ((${#profiles_selected[@]} == 0)); then
    for profile_name in "${profile_names[@]}"; do
        profiles_selected[$profile_name]=1
    done
fi

for profile_name in "${profile_names[@]}"; do
    [[ -v profiles_selected[$profile_name] ]] || continue

    if ! load_profile "${profile_files[$profile_name]}"; then
        printf "%s: unable to load profile: %q\n" "$0" "$profile_name" >&2
        exit 2
    fi

    if ! do_"$action_name"; then
        printf "%s: unable to perform action '%s' for profile: %q\n" "$0" "$action_name" "$profile_name" >&2
        exit 1
    fi
done
