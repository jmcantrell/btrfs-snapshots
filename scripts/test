#!/usr/bin/env bash

set -euo pipefail

self_name=${0##*/}

ROOT_DIR=$PWD

usage="Run tests.

If parallel is installed, it will be used to run tests concurrently.

Usage:
    $self_name [OPTIONS] [PATTERN...]

Options:
    -h         show this help text and exit

    -i         match PATTERN case-insensitively

    -v         print every test that's run, regardless of failures

Arguments:
    PATTERN    only test files matching PATTERN
"

run_test() {
    local test_file=${1:?missing test file}

    TEMP_DIR=$(mktemp -d -t "$TEST_RUNNER_NAME".XXXXXXXXXX)
    printf -v cleanup "rm -r %q" "$TEMP_DIR"
    trap '$cleanup' EXIT
    export TEMP_DIR

    if ((${TEST_VERBOSE:-0})); then
        printf "running test: %q\n" "$test_file"
    fi

    if ! "$test_file"; then
        printf "test failed: %q\n" "$test_file" >&2
        exit 1
    fi
}

TEST_VERBOSE=0
find_option="path"
while getopts "ivh" option; do
    case $option in
    v)
        TEST_VERBOSE=1
        ;;
    i)
        find_option="ipath"
        ;;
    h)
        printf "%s\n" "$usage"
        exit 0
        ;;
    esac
done
shift $((OPTIND - 1))

declare -a find_options=()
if (($# > 1)); then
    find_options+=("\\(")
    for pattern in "$@"; do
        find_options+=(-"$find_option" "*$pattern*" -o)
    done
    unset "find_options[-1]"
    find_options+=("\\)")
elif (($# > 0)); then
    find_options+=(-"$find_option" "*$1*")
fi

export -f run_test

export ROOT_DIR

export LIB_DIR=$ROOT_DIR/lib
export PATH=$ROOT_DIR/bin:$PATH

export TEST_VERBOSE
export TEST_RUNNER_NAME=${ROOT_DIR##*/}-$self_name
export TESTS_LIB_DIR=$ROOT_DIR/tests/lib
export PATH=$ROOT_DIR/tests/bin:$PATH

find "$ROOT_DIR"/tests/{unit,integration} \
    -type f -executable "${find_options[@]}" -print0 |
    parallel --shuf --jobs=0 --null run_test
