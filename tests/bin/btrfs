#!/usr/bin/env bash

# A fake implementation of the btrfs functionality used in the tests.
# Simulates the same messages. Operates on regular directories instead.

set -eu

. "$LIB_DIR"/init.sh
. "$TESTS_LIB_DIR"/init.sh

btrfs_subvolume() {
    local cmd=$1
    shift

    case $cmd in
    snapshot) btrfs_subvolume_snapshot "$@" ;;
    delete) btrfs_subvolume_delete "$@" ;;
    *)
        printf "Unexpected btrfs subvolume command: %s\n" "$cmd" >&2
        exit 1
        ;;
    esac
}

btrfs_subvolume_snapshot() {
    local options=$1
    local subvolume=$2
    local snapshot=$3

    if [[ $options != -r ]]; then
        printf "Btrfs command should be using -r to create a read-only snapshot\n" >&2
        exit 1
    fi

    if [[ ! -d $subvolume ]]; then
        printf "Subvolume path should be a directory\n" >&2
        exit 1
    fi

    if [[ -e $snapshot ]]; then
        printf "Snapshot path should not already exist\n" >&2
        exit 1
    fi

    printf "$TEXT_BTRFS_CREATE\n" "$subvolume" "$snapshot"

    cp -rT "$subvolume" "$snapshot" >&2
}

btrfs_subvolume_delete() {
    local snapshot=$1

    if [[ ! -d $snapshot ]]; then
        printf "Snapshot path should be a directory\n" >&2
        exit 1
    fi

    printf "$TEXT_BTRFS_DELETE\n" "$snapshot"

    rm -rf "$snapshot"
}

cmd=$1
shift

case $cmd in
subvolume) btrfs_subvolume "$@" ;;
*)
    printf "Unexpected btrfs command: %s\n" "$cmd" >&2
    exit 1
    ;;
esac
