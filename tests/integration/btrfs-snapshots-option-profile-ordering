#!/usr/bin/env bash

# Show that `btrfs-snapshots` processes profiles in a predictable order.

set -euo pipefail

. "$LIB_DIR"/init.bash
. "$TESTS_LIB_DIR"/init.bash

mkdir -p "$PROFILES_DIR"

profile_names=(a b c)
subvolume_dirs=()
snapshots=()
stdout_lines=()

for profile_name in "${profile_names[@]}"; do
    subvolume_dir=$TEMP_DIR/subvolume/$profile_name
    subvolume_dirs+=("$subvolume_dir")
    snapshots_dir=$TEMP_DIR/snapshots/$profile_name
    snapshot=$snapshots_dir/$TIMESTAMP
    snapshots+=("$snapshot")

    mkdir -p "$subvolume_dir"
    printf "%s" "$profile_name" >"$subvolume_dir"/marker

    printf "%s=%s\n" \
        SUBVOLUME "$subvolume_dir" \
        SNAPSHOTS "$snapshots_dir" \
        >"$PROFILES_DIR/$profile_name.conf"

    snapshot=$snapshots_dir/$TIMESTAMP
    stdout_lines+=("$snapshot")
    mkdir -p "$snapshot"
done

printf -v stdout "%s\n" "${stdout_lines[@]}"

# Ensure default profile selection is processed in order.
assert_stdout "$stdout" assert_success \
    btrfs-snapshots list

# Ensure out-of-order profile selection is processed in order.
assert_stdout "$stdout" assert_success \
    btrfs-snapshots -p c -p b -p a list
