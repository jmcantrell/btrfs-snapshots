#!/usr/bin/env bash

# Show that `btrfs-snapshots` prunes snapshots for requested profiles.

set -euo pipefail

. "$LIB_DIR"/init.bash
. "$TESTS_LIB_DIR"/init.bash

mkdir -p "$PROFILES_DIR"

profile_names=(a b c)
snapshots=()

for profile_name in "${profile_names[@]}"; do
    subvolume_dir=$TEMP_DIR/subvolume/$profile_name
    snapshots_dir=$TEMP_DIR/snapshots/$profile_name
    snapshot=$snapshots_dir/$TIMESTAMP
    snapshots+=("$snapshot")

    mkdir -p "$snapshot"

    # No limits are set, so every snapshot should be pruned.
    printf "%s=%q\n" \
        SUBVOLUME "$subvolume_dir" \
        SNAPSHOTS "$snapshots_dir" \
        >"$PROFILES_DIR/$profile_name.conf"
done

selected=(0 2)
selected_profile_names=()
stdout_lines=()

for i in "${selected[@]}"; do
    selected_profile_names+=("${profile_names[i]}")
    stdout_lines+=("fake btrfs subvolume delete ${snapshots[i]}")
done

printf -v stdout "%s\n" "${stdout_lines[@]}"

assert_success assert_stdout "$stdout" \
    btrfs-snapshots prune "${selected_profile_names[@]}"

for i in "${selected[@]}"; do
    assert_no_directory "${snapshots[i]}"
done

# Make sure the non-selected profile kept its snapshot.
assert_directory "${snapshots[1]}"
