#!/usr/bin/env bash

# Show that a profile does not inherit settings from a previously loaded one.

set -eu

. "$LIB_DIR"/init.sh
. "$TESTS_LIB_DIR"/init.sh

export PROFILE_FILE=$TEMP_DIR/profile
export DEFAULTS_FILE=/does/not/matter

touch "$PROFILE_FILE"

# Ensure non-inheritance of path variables.
for variable in SUBVOLUME SNAPSHOTS; do
    # Try to trick the function into accepting an inheritable value.
    export "$variable=$TEMP_DIR"

    printf -v stderr "%s\n" "$(
        format "ERROR: $TEXT_PROFILE_VARIABLE_NOT_SET" \
            PROFILE_NAME=profile VARIABLE="$variable"
    )"

    assert_failure assert_stderr "$stderr" \
        load_profile

    # Skip over this error for the next test.
    echo "$variable=$TEMP_DIR" >>"$PROFILE_FILE"
done

# Try to trick the function into accepting inheritable values.
for event_name in "${EVENT_NAMES[@]}"; do
    set_limit "$event_name" 1
done

# At this point, the profile is valid, but there are no limits set.
assert_success assert_no_output \
    load_profile

# Ensure non-inheritance of limit values.
for event_name in "${EVENT_NAMES[@]}"; do
    assert_equal "$(get_limit "$event_name")" 0
done
