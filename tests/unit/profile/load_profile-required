#!/usr/bin/env bash

# Show that loading a profile can only succeed when certain variables are set.

set -euo pipefail

. "$LIB_DIR"/init.bash
. "$TESTS_LIB_DIR"/init.bash

export PROFILE_FILE=$TEMP_DIR/foo.conf

variables=(SUBVOLUME SNAPSHOTS)
profile_lines=()

# For each required variable, try loading a profile with the following conditions:
# - variable is unset
# - variable is empty
# - variable is set to a relative path

for ((i = 0; i < ${#variables[@]}; i++)); do
    variable=${variables[i]}

    printf "%s\n" "${profile_lines[@]}" >"$PROFILE_FILE"

    printf -v stderr \
        "$TEXT_PROFILE_VARIABLE_NOT_SET\n" \
        "$PROFILE_FILE" "$variable"

    assert_stderr "$stderr" assert_failure \
        load_profile

    profile_lines+=("$variable=")
    printf "%s\n" "${profile_lines[@]}" >"$PROFILE_FILE"

    assert_stderr "$stderr" assert_failure \
        load_profile

    profile_lines[-1]=$variable=./relative/path
    printf "%s\n" "${profile_lines[@]}" >"$PROFILE_FILE"

    printf -v stderr \
        "$TEXT_PROFILE_PATH_NOT_ABSOLUTE\n" \
        "$PROFILE_FILE" "$variable"

    assert_stderr "$stderr" assert_failure \
        load_profile

    profile_lines[-1]=$variable=$TEMP_DIR
done
