#!/usr/bin/env bash

# Show that loading a profile can only succeed when certain variables are set.

set -eu

. "$LIB_DIR"/init.sh
. "$TESTS_LIB_DIR"/init.sh

export PROFILE_NAME=foo
profile_file=$TEMP_DIR/$PROFILE_NAME
variables=(SUBVOLUME SNAPSHOTS)
profile_lines=()

# For each required variable, try loading a profile with the following conditions:
# - variable is unset
# - variable is empty
# - variable is set to a relative path

export PROFILE_FILE=$profile_file

for ((i = 0; i < ${#variables[@]}; i++)); do
    variable=${variables[i]}

    printf "%s\n" "${profile_lines[@]}" >"$profile_file"

    printf -v stderr \
        "$TEXT_PROFILE_VARIABLE_NOT_SET\n" \
        "$PROFILE_NAME" "$variable"

    assert_failure assert_stderr "$stderr" \
        load_profile

    profile_lines+=("$variable=")
    printf "%s\n" "${profile_lines[@]}" >"$profile_file"

    assert_failure assert_stderr "$stderr" \
        load_profile

    profile_lines[-1]=$variable=./relative/path
    printf "%s\n" "${profile_lines[@]}" >"$profile_file"

    printf -v stderr \
        "$TEXT_PROFILE_PATH_NOT_ABSOLUTE\n" \
        "$PROFILE_NAME" "$variable"

    assert_failure assert_stderr "$stderr" \
        load_profile

    profile_lines[-1]=$variable=$TEMP_DIR
done
