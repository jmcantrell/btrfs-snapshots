#!/usr/bin/env bash

# Show that loading a profile can only succeed when certain variables are set.

set -eu

. "$LIB_DIR"/init.sh
. "$TESTS_LIB_DIR"/init.sh

profile_name=foo
profile_file=$TEMP_DIR/$profile_name
variables=(SUBVOLUME SNAPSHOTS)
values=()

# For each required variable, try loading a profile with the following conditions:
# - variable is unset
# - variable is empty
# - variable is set to a relative path

export PROFILE_FILE=$profile_file

for ((i = 0; i < ${#variables[@]}; i++)); do
    variable=${variables[i]}

    create_profile_unsafe "${values[@]}" >"$profile_file"

    printf -v message_not_set "%s\n" \
        "ERROR: $(format "$TEXT_PROFILE_VARIABLE_NOT_SET" VARIABLE="$variable" PROFILE_NAME="$profile_name")"

    assert_failure assert_stderr "$message_not_set" load_profile

    values+=("")
    create_profile_unsafe "${values[@]}" >"$profile_file"

    assert_failure assert_stderr "$message_not_set" load_profile

    values[-1]=./relative/path
    create_profile_unsafe "${values[@]}" >"$profile_file"

    printf -v message_abs_path "%s\n" \
        "ERROR: $(format "$TEXT_PROFILE_ABS_PATH" VARIABLE="$variable" PROFILE_NAME="$profile_name")"

    assert_failure assert_stderr "$message_abs_path" load_profile

    values[-1]=$TEMP_DIR
done
